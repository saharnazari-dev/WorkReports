// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WorkReports.Data;

namespace WorkReports.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20210507134639_AddData")]
    partial class AddData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WorkReports.Data.PersonWork", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DoneDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("EndHour")
                        .HasColumnType("time");

                    b.Property<string>("Opration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("StartHour")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.ToTable("PersonWorks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "اضاهه کردن بخش X, Y",
                            DoneDate = new DateTime(2021, 5, 7, 18, 16, 39, 224, DateTimeKind.Local).AddTicks(2561),
                            EndHour = new TimeSpan(0, 3, 10, 0, 0),
                            Opration = "تکمیل سیستم انبار",
                            StartHour = new TimeSpan(0, 2, 14, 18, 0)
                        });
                });

            modelBuilder.Entity("WorkReports.Data.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Family")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "SaharNazari@gmail.com",
                            Family = "Nazari",
                            Name = "Sahar",
                            Password = "6871814"
                        },
                        new
                        {
                            Id = 2,
                            Email = "Alighasemzad@gmail.com",
                            Family = "Ghasemzad",
                            Name = "Ali",
                            Password = "123456"
                        });
                });

            modelBuilder.Entity("WorkReports.Data.WorkReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("DailyWorkHour")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IsAccepted")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastWorkedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("MonthlyWorkHour")
                        .HasColumnType("float");

                    b.Property<double>("TotalWorkHour")
                        .HasColumnType("float");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("WorkReports");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DailyWorkHour = 8.0,
                            Description = "User panel",
                            IsAccepted = 1,
                            LastWorkedDate = new DateTime(2021, 5, 7, 18, 16, 39, 220, DateTimeKind.Local).AddTicks(9105),
                            MonthlyWorkHour = 180.0,
                            TotalWorkHour = 500.0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            DailyWorkHour = 7.0,
                            Description = "طراحی سیستم انبار",
                            IsAccepted = 0,
                            LastWorkedDate = new DateTime(2021, 5, 7, 18, 16, 39, 223, DateTimeKind.Local).AddTicks(9493),
                            MonthlyWorkHour = 180.53,
                            TotalWorkHour = 1000.2,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("WorkReports.Data.WorkReport", b =>
                {
                    b.HasOne("WorkReports.Data.User", "User")
                        .WithMany("WorkReports")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WorkReports.Data.User", b =>
                {
                    b.Navigation("WorkReports");
                });
#pragma warning restore 612, 618
        }
    }
}
